"""Initial structure.

Revision ID: d3882b5c329a
Revises:
Create Date: 2023-11-28 05:46:42.524441+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d3882b5c329a"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade():
    ## Functions
    op.execute(
        """
        CREATE OR REPLACE FUNCTION fn_updated_at()
        RETURNS trigger
        AS $$
        BEGIN
            NEW.updated_at = CURRENT_TIMESTAMP;
            RETURN NEW;
        END
        $$
        LANGUAGE plpgsql;
        """
    )

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "{{cookiecutter.project_abbr}}_task",
        sa.Column("id", sa.String(length=64), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("point", sa.Integer(), server_default=sa.text("70"), nullable=False),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "id", name=op.f("pk_{{cookiecutter.project_abbr}}_task")
        ),
    )
    op.create_index(
        "idx_created_at_desc",
        "{{cookiecutter.project_abbr}}_task",
        [sa.text("created_at DESC")],
        unique=False,
    )
    # ### end Alembic commands ###

    ## Triggers
    op.execute(
        f"""
        CREATE OR REPLACE TRIGGER tr_{{cookiecutter.project_abbr}}_task_updated_at
        BEFORE UPDATE ON {{cookiecutter.project_abbr}}_task
        FOR EACH ROW
        EXECUTE PROCEDURE fn_updated_at();
        """
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("{{cookiecutter.project_abbr}}_task")

    ## Functions
    op.execute("DROP FUNCTION fn_updated_at()")
    # ### end Alembic commands ###
